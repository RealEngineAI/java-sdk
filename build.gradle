plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group = 'ai.realengine'
archivesBaseName = 'realengine'
version = '1.0.0'
sourceCompatibility = '11'
targetCompatibility = '11'

java {
    withJavadocJar()
    withSourcesJar()
}

signing {
    sign configurations.archives
}

repositories {
    mavenCentral()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
            pom {
                name = archivesBaseName
                description = 'RealEngine Java SDK'
                url = 'https://github.com/RealEngineAI/java-sdk'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://raw.githubusercontent.com/RealEngineAI/java-sdk/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'yaivnv'
                        name = 'Iaroslav Ivanov'
                        email = 'yarslv.ivnv@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/RealEngineAI/java-sdk.git'
                    developerConnection = 'scm:git:ssh://github.com:RealEngineAI/java-sdk.git'
                    url = 'https://github.com/RealEngineAI/java-sdk'
                }
            }
        }
    }
    repositories {
        maven {
            name = 'OSSRH'
            url = version.endsWith('SNAPSHOT') ?
                    'https://s01.oss.sonatype.org/content/repositories/snapshots/' :
                    'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = hasProperty('ossrhUsername') ?
                        getProperty('ossrhUsername') :
                        System.getenv('OSSRH_USERNAME');
                password = hasProperty('ossrhPassword') ?
                        getProperty('ossrhPassword') :
                        System.getenv('OSSRH_PASSWORD')
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    options.addBooleanOption('html5', true)
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.11.0'
}

test {
    useJUnitPlatform()
}